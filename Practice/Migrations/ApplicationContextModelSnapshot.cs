// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Practice.Data;

#nullable disable

namespace Practice.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    partial class ApplicationContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Practice.Entities.Address", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("City")
                        .HasColumnType("VARCHAR")
                        .HasColumnName("city");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("VARCHAR")
                        .HasColumnName("country");

                    b.Property<string>("PostalCode")
                        .HasColumnType("VARCHAR")
                        .HasColumnName("postalCode");

                    b.HasKey("Id");

                    b.ToTable("Addresses");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            City = "Serang",
                            Country = "Indonesia",
                            PostalCode = "351121"
                        },
                        new
                        {
                            Id = 2,
                            City = "Bangkok",
                            Country = "Thailand",
                            PostalCode = "123113"
                        },
                        new
                        {
                            Id = 3,
                            City = "Jakarta",
                            Country = "Indonesia",
                            PostalCode = "234232"
                        });
                });

            modelBuilder.Entity("Practice.Entities.Person", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int?>("AddressId")
                        .HasColumnType("integer");

                    b.Property<int?>("Age")
                        .HasColumnType("INTEGER")
                        .HasColumnName("age");

                    b.Property<DateOnly?>("DateOfBirth")
                        .HasColumnType("DATE")
                        .HasColumnName("dateOfBirth");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("VARCHAR")
                        .HasColumnName("name");

                    b.HasKey("Id");

                    b.HasIndex("AddressId")
                        .IsUnique();

                    b.ToTable("Persons");
                });

            modelBuilder.Entity("Practice.Entities.Person", b =>
                {
                    b.HasOne("Practice.Entities.Address", "Address")
                        .WithMany()
                        .HasForeignKey("AddressId");

                    b.Navigation("Address");
                });
#pragma warning restore 612, 618
        }
    }
}
